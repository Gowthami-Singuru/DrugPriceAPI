//var request = require("/opt/node_modules/request");
var rp = require('request-promise');
var fileStream = require('fs');
const {Pool, Client} = require('pg');
var db_host = process.env.DB_HOST;
var reg = process.env.REGION;
const fs = require('fs');

// const connectionString = 'postgresql://postgres:secret@10.80.1.121:5432/apid'
const connectionString = 'postgresql://postgres:galaxy123456@database-2.ch91gk9zmx2h.us-east-1.rds.amazonaws.com/postgres';
function DateFunction(){
    var today = new Date();
    var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();
    var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
    var dateTime = date+' '+time;
    return dateTime;
}
function comparePrices(a,b){
    if(a.price === null) return 1;
    if(b.price === null) return -1;
    if (a.price > b.price) return 1;
    if (b.price >= a.price) return -1;
}

var DrugId="";
const client = new Client({
    connectionString: 'postgresql://postgres:galaxy123456@database-2.ch91gk9zmx2h.us-east-1.rds.amazonaws.com/postgres'
});
client.connect(function (err) {
    if (err) {
        console.log(err);
    } else {
        console.log("Connected to postgres");
        //const promise = generateDrugRequestQueries();
        // client.end();
    }
});
var listDrugs = ['70710122700',
    '16729017501',
    '70710122600',
    '70710122501',
    '68180072003',
    '68180071909',
    '00781613954',
    '65862050220',
    '00781261305',
    '00143988701',
    '13668021930',
    '13668021830',
    '00904675180',
    '60219107601',
    '60505057804',
    '45802002683',
    '59762312001',
    '00527133701',
    '00603243721',
    '00603243821',
    '29300012601',
    '65162077810',
    '69097031987',
    '42799012101',
    '60505015701',
    '43547029010',
    '60505015801',
    '43547028810',
    '00093520006',
    '64380078706',
    '00093100301',
    '69452020720',
    '51672400501',
    '00228253910',
    '68180072320',
    '67877021560',
    '65862090801',
    '68180044101',
    '69315030805',
    '55111012701',
    '13668001005',
    '13668001105',
    '65862018601',
    '45802026337',
    '00168020260',
    '59762374401',
    '16729021816',
    '68462018135',
    '00472037915',
    '51991083801',
    '00555904358',
    '68462031829',
    '00054040013',
    '16571020210',
    '69097052444',
    '00143124010',
    '68682099398',
    '68682099798',
    '55111053301',
    '68382010610',
    '29300013901',
    '62756079813',
    '43547027511',
    '24208048510',
    '00378104901',
    '53489011802',
    '57237001760',
    '27241009803',
    '13668013501',
    '00378464026',
    '00378877035',
    '00555088702',
    '00555089902',
    '65162022621',
    '00555088602',
    '68180015001',
    '00172572860',
    '00378306577',
    '00378306677',
    '27241011904',
    '00115552210',
    '00904759080',
    '62559038001',
    '62559038101',
    '00115703301',
    '51672127304',
    '55111015001',
    '00173069500',
    '00173069600',
    '00054429731',
    '68462012605',
    '69097082112',
    '60758018805',
    '55111032001',
    '60505014201',
    '60505392901',
    '60505392701',
    '65162071110',
    '31722051901',
    '31722052201',
    '31722052101',
    '31722052001',
    '00168014630',
    '00168008031',
    '68382009601',
    '49884072401',
    '16714008310',
    '00093506001',
    '64380080907',
    '64380080807',
    '00054004544',
    '51672129803',
    '60505100301',
    '49884012301',
    '00121057716',
    '62332006230',
    '16729003410',
    '68462034690',
    '65862053820',
    '68180084413',
    '00378182377',
    '00378181710',
    '00591352530',
    '50383066730',
    '42794001812',
    '68180098003',
    '68180051202',
    '68462022301',
    '68462022401',
    '31722054501',
    '68462064693',
    '00093031101',
    '45802065087',
    '65862046990',
    '10370034911',
    '65162017910',
    '65862078201',
    '70010075401',
    '59746000106',
    '00093220401',
    '55111046705',
    '55111046605',
    '00378001805',
    '57664047758',
    '66993096045',
    '00781707787',
    '68180091113',
    '65862021150',
    '13107003234',
    '57664051083',
    '60505083001',
    '57237021330',
    '65862084003',
    '00054016625',
    '00591367001',
    '00591367101',
    '16729008110',
    '65162018910',
    '61314063136',
    '61314063006',
    '68682010910',
    '68682010810',
    '47781030701',
    '47781030801',
    '00093532862',
    '00555902858',
    '00378727253',
    '00555021110',
    '00555901058',
    '00555901858',
    '00555904958',
    '00574200802',
    '00472016630',
    '45802005911',
    '60432053716',
    '33342007207',
    '62332015130',
    '62332014930',
    '60505057501',
    '00093768432',
    '65862018730',
    '69238126401',
    '62756018388',
    '62756018588',
    '62756018488',
    '10702020101',
    '16729031901',
    '16729031701',
    '57237004105',
    '45802026937',
    '00093727356',
    '00093727256',
    '00093727156',
    '45802086803',
    '68382032010',
    '68382053701',
    '68462033190',
    '00093077198',
    '00378230201',
    '00378110101',
    '00603533815',
    '00054474125',
    '53746054401',
    '68382004001',
    '51991081801',
    '51991081701',
    '00115166101',
    '00115166001',
    '67877024801',
    '67877024760',
    '43547034306',
    '43547034206',
    '51991036378',
    '68462025601',
    '43547026810',
    '43547026910',
    '68462025501',
    '31722088490',
    '00093534356',
    '43598021055',
    '10572030201',
    '60258015001',
    '53746051401',
    '65862041901',
    '65862049647',
    '27241011203',
    '67877048384',
    '50383023310',
    '13668019030',
    '50111091701',
    '45802005535',
    '45802006435',
    '33342006510',
    '33342006410',
    '33342007810',
    '65862054990',
    '65862054890',
    '00093171301',
    '57237011490',
    '65862058401',
    '66993004330',
    '66993006002',
    '42799012001',
    '11534018701',
    '68180012101',
    '45802050702',
    '51672125903',
    '68180095604',
    '43386002860',
    '59762045001',
    '68180059306',
    '55111053401',
    '60505009400',
    '23155013525',
    '59762232201',
    '51672403803',
    '70700011585',
    '51672401801',
    '43598056601',
    '64980028101',
    '29300012910',
    '43199001101',
    '45802036862',
    '00054004641',
    '31722073190',
    '31722073090',
    '47781055201',
    '68180011216',
    '65862024708',
    '00378181977',
    '68462041820',
    '00555077902',
    '23155007001',
    '00093220305',
    '50742061801',
    '13107000334',
    '50742062101',
    '47781030301',
    '33342007007',
    '68382000105',
    '17478076710',
    '62175030232',
    '00093729001',
    '43547034006',
    '43547033906',
    '33342008845',
    '60505470303',
    '60505470203',
    '70069013101',
    '00574220545',
    '33342006310',
    '00093171201',
    '00093171501'];

exports.myhandler = async function (event, context){

    var dailyArray = [];
    console.log("list len"+listDrugs.length)
    for(let k=0; k < listDrugs.length; k++){
        //console.log("listdrugs2:"+k);
        //if(k<=len){

        //console.log("TYPE :"+typeof(listDrugs[k]));
        var drugUrlList = await client.query("SELECT * FROM drug_request where program_id = 6 and zipcode = '75034' and status = 'ACTIVE' and ndc::bigint ="+ listDrugs[k]);

        if(drugUrlList.rows != 0){
            if(drugUrlList.rows.length > 1){
               console.log("ndc ="+listDrugs[k].toString());
            }
            for(let j=0; j < drugUrlList.rows.length; j++){

                dailyArray.push(drugUrlList.rows[j].drug_id);
            }
        }else{
            console.log("failed ndc ="+listDrugs[k].toString() +"seq"+ k);
            continue
        }
    }
    fs.writeFile('dailyArray.json', JSON.stringify(dailyArray), function(err) {
        if (err) console.log(err);
        console.log("Done");
    });
    console.log("len"+dailyArray.length);
};

exports.myhandler();